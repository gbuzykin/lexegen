/* Parsegen autogenerated analyzer file - do not edit! */
/* clang-format off */

static int action_idx[36] = {
    0, 16, 26, 38, 48, 0, 0, 52, 54, 56, 58, 60, 62, 0, 0, 64, 68, 74, 84, 0, 86, 88, 90, 92, 94, 100, 104, 110, 116,
    118, 120, 124, 126, 130, 132, 142
};

static int action_list[144] = {
    33, 9, 40, 11, 94, 13, 261, 15, 262, 17, 263, 19, 264, 21, -1, -1, 36, 25, 47, 27, 124, 29, 260, 71, -1, -1, 40, 11,
    261, 15, 262, 17, 263, 19, 264, 21, -1, 36, 42, 43, 43, 45, 63, 47, 123, 49, -1, 42, 94, 39, -1, -1, -1, 102, -1,
    108, -1, 114, -1, 120, -1, 18, -1, 30, 36, 25, -1, 12, 36, 25, 124, 29, -1, 6, 36, 25, 41, 37, 47, 27, 124, 29, -1,
    -1, -1, 54, -1, 24, -1, 60, -1, 66, -1, 72, 44, 51, 265, 53, -1, -1, 265, 65, -1, -1, 44, 55, 125, 57, -1, -1, 125,
    59, 265, 61, -1, -1, -1, 78, -1, 90, 125, 63, -1, -1, -1, 96, 125, 67, -1, -1, -1, 84, 42, 43, 43, 45, 63, 47, 123,
    49, -1, 48, -1, 0
};

static int reduce_info[63] = {
    2, 0, 0, 3, 2, 1, 3, 2, 2, 2, 2, 3, 3, 2, 4, 2, 2, 5, 1, 2, 0, 1, 14, 0, 2, 14, 6, 3, 16, 0, 2, 16, 7, 2, 16, 8, 2,
    16, 9, 4, 16, 10, 5, 16, 11, 5, 16, 12, 6, 16, 13, 1, 16, 0, 1, 16, 0, 1, 16, 0, 1, 16, 0
};

static int goto_list[20] = {
    -1, 0, 5, 17, 6, 11, 13, 16, 14, 15, 19, 20, -1, 1, -1, 2, 2, 34, -1, 3
};

static int parse(int tt, int* sptr0, int** p_sptr, int rise_error) {
    enum { shift_flag = 1, flag_count = 1 };
    int action = rise_error;
    if (action >= 0) {
        const int* action_tbl = &action_list[action_idx[*(*p_sptr - 1)]];
        while (action_tbl[0] >= 0 && action_tbl[0] != tt) { action_tbl += 2; }
        action = action_tbl[1];
    }
    if (action >= 0) {
        if (!(action & shift_flag)) {
            const int* info = &reduce_info[action >> flag_count];
            const int* goto_tbl = &goto_list[info[1]];
            int state = *((*p_sptr -= info[0]) - 1);
            while (goto_tbl[0] >= 0 && goto_tbl[0] != state) { goto_tbl += 2; }
            *(*p_sptr)++ = goto_tbl[1];
            return predef_act_reduce + info[2];
        }
        *(*p_sptr)++ = action >> flag_count;
        return predef_act_shift;
    }
    /* Roll back to state, which can accept error */
    do {
        const int* action_tbl = &action_list[action_idx[*(*p_sptr - 1)]];
        while (action_tbl[0] >= 0 && action_tbl[0] != predef_tt_error) { action_tbl += 2; }
        if (action_tbl[1] >= 0 && (action_tbl[1] & shift_flag)) { /* Can recover */
            *(*p_sptr)++ = action_tbl[1] >> flag_count;           /* Shift error token */
            break;
        }
    } while (--*p_sptr != sptr0);
    return action;
}
