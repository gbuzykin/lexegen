/* Lexegen autogenerated analyzer file - do not edit! */
/* clang-format off */

static uint8_t symb2meta[256] = {
    0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4, 5, 6, 4, 7, 1,
    1, 4, 4, 4, 4, 1, 8, 9, 4, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 1, 1, 12, 1, 13, 4, 1, 14, 14, 14, 14, 14, 14,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 17, 18, 19, 15, 1, 20, 21, 14,
    14, 14, 22, 15, 15, 23, 15, 15, 15, 15, 24, 25, 26, 15, 27, 28, 29, 15, 30, 15, 31, 15, 15, 32, 4, 33, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1
};

static int def[62] = {
    -1, -1, 0, 1, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, 12, 12, 33, -1, -1, -1, 3, -1, -1, 14, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1
};

static int base[62] = {
    0, 33, 66, 99, 130, 56, 0, 68, 0, 0, 0, 0, 160, 52, 191, 211, 131, 0, 0, 75, 0, 0, 0, 0, 0, 0, 0, 156, 233, 0, 92,
    0, 0, 114, 136, 121, 0, 129, 0, 242, 0, 0, 0, 0, 246, 0, 0, 0, 239, 251, 0, 109, 114, 128, 138, 139, 0, 140, 148,
    147, 149, 0
};

static int next[285] = {
    -1, 9, 7, 46, 9, 10, 47, 48, 9, 9, 37, 37, 9, 9, 49, 49, 9, 9, 9, 9, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
    9, 9, 44, 44, 40, 44, 45, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 42, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
    44, 44, 44, 44, 44, 44, 6, 12, 8, 7, 32, 6, 6, 6, 11, 6, 6, 6, 6, 6, 6, 13, 14, 6, 30, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
    6, 6, 15, 6, 39, 39, 31, 39, 39, 39, 39, 41, 39, 39, 39, 39, 39, 39, 39, 39, -1, 43, 39, 39, 39, 39, 39, 39, 39, 39,
    39, 39, 39, 39, 39, 39, 39, 8, 36, 57, 9, 9, 35, 37, 37, 16, 16, 53, 9, 9, 34, 34, 54, 36, 9, 9, 9, 9, 9, 9, 9, 9,
    9, 9, 9, 9, 33, 38, 17, 55, 28, 28, 56, 58, 28, 59, 60, 61, 34, 34, 28, 28, 28, -1, 34, 34, 34, 34, 34, 34, 34, 34,
    34, 34, 34, 34, 18, 18, -1, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 20, 21, 22, 18, 23, 18,
    18, 24, 18, 25, 26, 27, 18, 18, 16, 16, -1, -1, -1, -1, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 29, 29, -1,
    50, 29, -1, -1, -1, -1, -1, 29, 29, 29, -1, -1, -1, -1, -1, 49, 49, -1, 51, 49, 49, 52, 39, 39, 39, 49, 49, 49, 49,
    49, 49, 49, 49, 49, 49, 49, 49, -1, -1
};

static int check[285] = {
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 2, 7, 13, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 19, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 30, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 33, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 35, 51, 4, 4, 34, 37, 37, 16, 16, 52, 4, 4, 34, 34, 53,
    34, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 12, 4, 16, 54, 27, 27, 55, 57, 27, 58, 59, 60, 12, 12, 27, 27, 27, 12, 12,
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 28, 28, 39, 48, 28, 28, 44, 39, 44, 28, 28, 28, 28, 28, 28, 28, 39, 39, 49, 49, 44, 48, 49, 49, 48,
    39, 39, 39, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49
};

static int accept[62] = {
    0, 0, 0, 0, 0, 0, 52, 36, 48, 70, 68, 42, 52, 38, 52, 46, 0, 44, 22, 4, 8, 10, 12, 16, 14, 18, 20, 22, 6, 6, 4, 4,
    40, 0, 0, 0, 3, 62, 50, 28, 34, 30, 70, 32, 24, 26, 66, 64, 70, 60, 58, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 56
};

static int lls_idx[63] = {
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
};

static int lls_list[1] = {
    1
};

static int lex(const char* first, const char* last, int** p_sptr, unsigned* p_llen, int flags) {
    int *sptr = *p_sptr, *sptr0 = sptr - *p_llen;
    int state = *(sptr - 1);
    while (first < last) { /* Analyze till transition is impossible */
        uint8_t meta = symb2meta[(unsigned char)*first];
        do {
            int l = base[state] + meta;
            if (check[l] == state) {
                state = next[l];
                break;
            }
            state = def[state];
        } while (state >= 0);
        if (state < 0) { goto unroll; }
        *sptr++ = state, ++first;
    }
    if ((flags & flag_has_more) || sptr == sptr0) {
        *p_sptr = sptr;
        *p_llen = (unsigned)(sptr - sptr0);
        return err_end_of_input;
    }
unroll:
    *p_sptr = sptr0;
    while (sptr != sptr0) { /* Unroll down-to last accepting state */
        int n_pat = accept[(state = *(sptr - 1))];
        if (n_pat > 0) {
            enum { kTrailingContextFlag = 1, kFlagCount = 1 };
            int i;
            if (!(n_pat & kTrailingContextFlag)) {
                *p_llen = (unsigned)(sptr - sptr0);
                return n_pat >> kFlagCount;
            }
            n_pat >>= kFlagCount;
            do {
                for (i = lls_idx[state]; i < lls_idx[state + 1]; ++i) {
                    if (lls_list[i] == n_pat) {
                        *p_llen = (unsigned)(sptr - sptr0);
                        return n_pat;
                    }
                }
                state = *(--sptr - 1);
            } while (sptr != sptr0);
            *p_llen = (unsigned)(sptr - sptr0);
            return n_pat;
        }
        --sptr;
    }
    *p_llen = 1; /* Accept at least one symbol as default pattern */
    return predef_pat_default;
}
